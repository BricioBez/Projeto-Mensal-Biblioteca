
package Aplicacao;

import Entidades.*;
import Modelos.*;
import Usuarios.*;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Scanner;

public class Main {
    private static Biblioteca biblioteca = new Biblioteca();
    private static Scanner scanner = new Scanner(System.in);
    private static DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");

    public static void main(String[] args) {
        int opcao;
        do {
            System.out.println(" \n======================================   ");
            System.out.println("SISTEMA DE GERENCIAMENTO DE BIBLIOTECA   ");
            System.out.println("======================================\n ");
            System.out.println("1 - Cadastrar Livro");
            System.out.println("2Ô∏è - Cadastrar Usu√°rio");
            System.out.println("3Ô∏è - Emprestar Livro");
            System.out.println("4Ô∏è - Devolver Livro");
            System.out.println("5 - Listar Livros Dispon√≠veis");
            System.out.println("6Ô∏è - Listar Usu√°rios Cadastrados");
            System.out.println("7Ô∏è - Listar Todos os Livros");
            System.out.println("0Ô∏è - Sair\n");
            System.out.print("Escolha uma op√ß√£o: ");

            opcao = scanner.nextInt();
            scanner.nextLine(); // Limpa o buffer do Scanner

            switch (opcao) {
                case 1 -> cadastrarLivro();
                case 2 -> cadastrarUsuario();
                case 3 -> emprestarLivro();
                case 4 -> devolverLivro();
                case 5 -> biblioteca.listarLivrosDisponiveis();
                case 6 -> listarUsuarios();
                case 7 -> listarTodosOsLivros();
                case 0 -> System.out.println(" Encerrando o sistema...");
                default -> System.out.println(" Op√ß√£o inv√°lida! Tente novamente.");
            }
        } while (opcao != 0);
    }

    private static void cadastrarLivro() {
        System.out.print(" ID do Livro: ");
        String id = scanner.nextLine();
        if (biblioteca.verificarLivroExiste(id)) {
            System.out.println(" Erro: J√° existe um livro cadastrado com esse ID!");
            return;
        }
        System.out.print(" T√≠tulo: ");
        String titulo = scanner.nextLine();
        System.out.print(" Autor: ");
        String autor = scanner.nextLine();
        System.out.print(" Ano de Publica√ß√£o: ");
        int ano = scanner.nextInt();
        scanner.nextLine();

        Livro livro = new Livro(id, titulo, autor, ano);
        biblioteca.cadastrarLivro(livro);
    }

    private static void cadastrarUsuario() {
        System.out.print("üë§ ID do Usu√°rio: ");
        String id = scanner.nextLine();
        if (biblioteca.verificarUsuarioExiste(id)) {
            System.out.println(" Erro: J√° existe um usu√°rio cadastrado com esse ID!");
            return;
        }
        System.out.print(" Nome: ");
        String nome = scanner.nextLine();
        System.out.print(" Tipo (1-ALUNO, 2-PROFESSOR, 3-FUNCIONARIO): ");
        int tipo = scanner.nextInt();
        scanner.nextLine();

        Usuario usuario;
        if (tipo == 1) {
            usuario = new Aluno(id, nome);
        } else if (tipo == 2) {
            usuario = new Professor(id, nome);
        } else {
            usuario = new Funcionario (id, nome);
        }

        biblioteca.cadastrarUsuario(usuario);
    }

    private static void emprestarLivro() {
        System.out.print(" ID do Usu√°rio: ");
        String userId = scanner.nextLine();
        System.out.print(" ID do Livro: ");
        String livroId = scanner.nextLine();
        System.out.print(" Data do Empr√©stimo (dd/MM/yyyy): ");
        String dataEmprestimoStr = scanner.nextLine();

        LocalDate dataEmprestimo = LocalDate.parse(dataEmprestimoStr, formatter);
        biblioteca.emprestarLivro(userId, livroId, dataEmprestimo);
    }

    private static void devolverLivro() {
        System.out.print(" ID do Usu√°rio: ");
        String userId = scanner.nextLine();
        System.out.print(" ID do Livro: ");
        String livroId = scanner.nextLine();
        System.out.print(" Data da Devolu√ß√£o (dd/MM/yyyy): ");
        String dataDevolucaoStr = scanner.nextLine();

        LocalDate dataDevolucao = LocalDate.parse(dataDevolucaoStr, formatter);
        biblioteca.devolverLivro(userId, livroId, dataDevolucao);
    }

    private static void listarUsuarios() {
        System.out.println(" =============================");
        System.out.println(" Lista de Usu√°rios Cadastrados");
        System.out.println(" =============================\n");
        biblioteca.listarUsuarios();
    }

    private static void listarTodosOsLivros() {
        System.out.println(" ========================");
        System.out.println(" Lista de Todos os Livros");
        System.out.println(" ========================\n");
        biblioteca.listarTodosOsLivros();
    }

}
